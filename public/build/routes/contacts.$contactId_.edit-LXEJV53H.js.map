{
  "version": 3,
  "sources": ["../../../app/routes/contacts.$contactId_.edit.js"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/contacts.$contactId_.edit.js\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/contacts.$contactId_.edit.js\");\n  import.meta.hot.lastModified = \"1726414304072.001\";\n}\n// REMIX HMR END\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigate } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\nimport { contactService } from \"../entrypoint\";\nexport const action = async ({\n  params,\n  request\n}) => {\n  invariant(params.contactId, \"Missing contactId param\");\n  const fromData = await request.formData();\n  const updates = Object.fromEntries(fromData);\n  await contactService.set(params.contactId, updates);\n  return redirect(`/contacts/${params.contactId}`);\n};\nexport const loader = async ({\n  params\n}) => {\n  invariant(params.contactId, \"Missing contactId param\");\n  const contact = await contactService.get(params.contactId);\n  if (!contact) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return json({\n    contact\n  });\n};\nexport default function EditContact() {\n  _s();\n  const {\n    contact\n  } = useLoaderData();\n  const navigate = useNavigate();\n  return _jsxs(Form, {\n    id: \"contact-form\",\n    method: \"post\",\n    children: [_jsxs(\"p\", {\n      children: [_jsx(\"span\", {\n        children: \"Name\"\n      }), _jsx(\"input\", {\n        defaultValue: contact.first,\n        \"aria-label\": \"First name\",\n        name: \"first\",\n        type: \"text\",\n        placeholder: \"First\"\n      }), _jsx(\"input\", {\n        \"aria-label\": \"Last name\",\n        defaultValue: contact.last,\n        name: \"last\",\n        placeholder: \"Last\",\n        type: \"text\"\n      })]\n    }), _jsxs(\"label\", {\n      children: [_jsx(\"span\", {\n        children: \"Twitter\"\n      }), _jsx(\"input\", {\n        defaultValue: contact.twitter,\n        name: \"twitter\",\n        placeholder: \"@jack\",\n        type: \"text\"\n      })]\n    }), _jsxs(\"label\", {\n      children: [_jsx(\"span\", {\n        children: \"Avatar URL\"\n      }), _jsx(\"input\", {\n        \"aria-label\": \"Avatar URL\",\n        defaultValue: contact.avatar,\n        name: \"avatar\",\n        placeholder: \"https://example.com/avatar.jpg\",\n        type: \"text\"\n      })]\n    }), _jsxs(\"label\", {\n      children: [_jsx(\"span\", {\n        children: \"Notes\"\n      }), _jsx(\"textarea\", {\n        defaultValue: contact.notes,\n        name: \"notes\",\n        rows: 6\n      })]\n    }), _jsxs(\"p\", {\n      children: [_jsx(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }), _jsx(\"button\", {\n        onClick: () => navigate(-1),\n        type: \"button\",\n        children: \"Cancel\"\n      })]\n    })]\n  }, contact.id);\n}\n_s(EditContact, \"hNBbUOQ8Y0dVUNq/e/mHDN0KVVU=\", false, function () {\n  return [useLoaderData, useNavigate];\n});\n_c = EditContact;\nvar _c;\n$RefreshReg$(_c, \"EditContact\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAqBA,yBAA2C;AAC3C,kBAA+B;AArB/B,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyC;AACzC,cAAY,IAAI,eAAe;AACjC;AAgCe,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,WAAW,YAAY;AAC7B,aAAO,mBAAAA,MAAM,MAAM;AAAA,IACjB,IAAI;AAAA,IACJ,QAAQ;AAAA,IACR,UAAU,KAAC,mBAAAA,MAAM,KAAK;AAAA,MACpB,UAAU,KAAC,mBAAAC,KAAK,QAAQ;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC,OAAG,mBAAAA,KAAK,SAAS;AAAA,QAChB,cAAc,QAAQ;AAAA,QACtB,cAAc;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,QACN,aAAa;AAAA,MACf,CAAC,OAAG,mBAAAA,KAAK,SAAS;AAAA,QAChB,cAAc;AAAA,QACd,cAAc,QAAQ;AAAA,QACtB,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,MACR,CAAC,CAAC;AAAA,IACJ,CAAC,OAAG,mBAAAD,MAAM,SAAS;AAAA,MACjB,UAAU,KAAC,mBAAAC,KAAK,QAAQ;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC,OAAG,mBAAAA,KAAK,SAAS;AAAA,QAChB,cAAc,QAAQ;AAAA,QACtB,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,MACR,CAAC,CAAC;AAAA,IACJ,CAAC,OAAG,mBAAAD,MAAM,SAAS;AAAA,MACjB,UAAU,KAAC,mBAAAC,KAAK,QAAQ;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC,OAAG,mBAAAA,KAAK,SAAS;AAAA,QAChB,cAAc;AAAA,QACd,cAAc,QAAQ;AAAA,QACtB,MAAM;AAAA,QACN,aAAa;AAAA,QACb,MAAM;AAAA,MACR,CAAC,CAAC;AAAA,IACJ,CAAC,OAAG,mBAAAD,MAAM,SAAS;AAAA,MACjB,UAAU,KAAC,mBAAAC,KAAK,QAAQ;AAAA,QACtB,UAAU;AAAA,MACZ,CAAC,OAAG,mBAAAA,KAAK,YAAY;AAAA,QACnB,cAAc,QAAQ;AAAA,QACtB,MAAM;AAAA,QACN,MAAM;AAAA,MACR,CAAC,CAAC;AAAA,IACJ,CAAC,OAAG,mBAAAD,MAAM,KAAK;AAAA,MACb,UAAU,KAAC,mBAAAC,KAAK,UAAU;AAAA,QACxB,MAAM;AAAA,QACN,UAAU;AAAA,MACZ,CAAC,OAAG,mBAAAA,KAAK,UAAU;AAAA,QACjB,SAAS,MAAM,SAAS,EAAE;AAAA,QAC1B,MAAM;AAAA,QACN,UAAU;AAAA,MACZ,CAAC,CAAC;AAAA,IACJ,CAAC,CAAC;AAAA,EACJ,GAAG,QAAQ,EAAE;AACf;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,eAAe,WAAW;AACpC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["_jsxs", "_jsx"]
}
